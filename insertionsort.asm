.MODEL SMALL
.STACK 100H
.DATA
ARRAY DW 6, 5, 0, 2, -3
N DB ?
ARRAY_SIZE DW 5
PROMPT1 DB "ENTER SIZE OF ARRAY",13,10,"$"
PROMPT2 DB 13,10,"ENTER ELEMENTS",13,10,"$"
PROMPT3 DB 13,10,"ENTER SEARCH KEY",13,10,"$"
NL DB 13,10,"$"
SUCCESS DB " FOUND AT "
FAILURE DB " NOT FOUND",13,10,"$"
INV_SIZE DB 13,10,"INVALID INPUT","$"
.CODE
MAIN PROC
    MOV AX, @DATA
    MOV DS, AX
    
    LEA SI, ARRAY
    MOV CX, ARRAY_SIZE
    ; DEC CX
INSERTION_SORT_LOOP:
    PUSH CX
    DEC CX
    MOV BX, ARRAY_SIZE
    SUB BX, CX
    MOV DX, BX
    DEC DX      ; WE START CHECKING FROM THE PREVIOUS ONE UNTIL INDEX 0
    ADD BX, BX  ; BECAUSE EACH ENTRY IS A WORD, PASS TWO INDICES TO GET NEXT 
    MOV AX, SI[BX]
    INSERTION_LOOP_INNER:
        CMP DX,0
        JNGE INNER_BREAK
        
        MOV BX, DX
        ADD BX, BX
        MOV CX, SI[BX]
        CMP CX, AX
        JLE INNER_BREAK
        
        MOV BX, DX
        INC BX
        ADD BX, BX
        MOV SI[BX], CX
        DEC DX
        JMP INSERTION_LOOP_INNER
    INNER_BREAK:
    MOV BX, DX
    INC BX
    ADD BX, BX
    MOV SI[BX], AX  
    POP CX
    LOOP INSERTION_SORT_LOOP


    MOV AH, 4CH
    INT 21H
MAIN ENDP
END MAIN 